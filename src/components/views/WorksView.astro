---
import WorksItem from '~/components/views/WorksItem.astro'
import Toc from '~/components/toc/Toc.astro'
import Warning from '~/components/base/Warning.astro'
import { getYear } from '~/utils/datetime'
import { getFilteredPosts, getSortedPosts } from '~/utils/post'
import { FEATURES } from '~/config'

import type {
  CollectionEntry,
  ContentCollectionKey,
  DataCollectionKey,
} from 'astro:content'
interface Props {
  collectionType: ContentCollectionKey | DataCollectionKey
  pageToc: boolean
}

const { collectionType, pageToc } = Astro.props
const validCollectionType = ['calligraphy', 'photographs']

/* Toc */
const { toc } = FEATURES
const tocEnabled = Array.isArray(toc) && toc[0] && pageToc
let years: string[] = []

/* Posts */
let workItems: CollectionEntry<ContentCollectionKey>[]
let sortedWorkItems: CollectionEntry<ContentCollectionKey>[] = []

workItems = await getFilteredPosts(collectionType)
sortedWorkItems = getSortedPosts(workItems)

if (tocEnabled) {
  const yearsSet = new Set<number>()
  sortedWorkItems.forEach((item) => {
    const year = getYear(item.data.pubDate)
    yearsSet.add(year)
  })

  years = Array.from(yearsSet)
    .sort((a, b) => b - a)
    .map((year) => year.toString())
}

/* Exception */
const warningHTML = `The '${collectionType}' collection type does not
  belong to the built-in types 'blog', 'feeds', or 'streams'. You may
  need to modify the <code>ListView.astro</code> logic for your defined
  collection types to render the list.`
---

{tocEnabled && <Toc {years} />}

{
  (
    <div aria-label="Post list" class="grid grid-cols-2 gap-4">
      {sortedWorkItems.length === 0 ? (
        <div class="py-2 op-50 text-align-center">Nothing here yet.</div>
      ) : (
        sortedWorkItems.map(async (item, idx) => {
          const { data, slug } = item
          const { remarkPluginFrontmatter } = await item.render()
          const minutesRead =
            data.minutesRead || remarkPluginFrontmatter.minutesRead

          return (
            <>
              <WorksItem
                {idx}
                {collectionType}
                redirect={data.redirect}
                postSlug={slug}
                title={data.title}
                thumbnail={data.thumbnail}
                video={data.video}
                radio={data.radio}
                date={data.pubDate}
                {minutesRead}
                platform={data.platform}
                collectionType={collectionType}
              />
            </>
          )
        })
      )}
    </div>
  )
}

{
  !validCollectionType.includes(collectionType) && (
    <Warning rawHTMLString={warningHTML} />
  )
}
